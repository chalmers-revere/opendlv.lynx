/*
 * Copyright (C) 2017 Chalmers Revere
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

/* 
  Ranges:

  coord: 1000-1020
  body: 1021-1030
  sensors: 1031-1070
  actuators: 1071-1090
  system: 1091-1100
  sensation: 1101-1120
  perception: 1121-1140
  communcation: 1141-1160
  action: 1161-1180
  cogniation: 1181-1200
  adaptation: 1201-1220
*/

message opendlv.coord.Position [id = 1000] {
  double x [id = 1];
  double y [id = 2];
  double z [id = 3];
}

message opendlv.coord.Frame [id = 1001] {
  double x [id = 1];
  double y [id = 2];
  double z [id = 3];
  double roll [id = 4];
  double pitch [id = 5];
  double yaw [id = 6];
}

message opendlv.coord.KinematicState [id = 1002] {
  double vx [id = 1];
  double vy [id = 2];
  double vz [id = 3];
  double rollRate [id = 4];
  double pitchRate [id = 5];
  double yawRate [id = 6];
}

message opendlv.coord.CubeShape [id = 1008] {
  double length [id = 1];
  double width [id = 2];
  double height [id = 3];
}

message opendlv.coord.ConeShape [id = 1009] {
  double radius [id = 1];
  double height [id = 2];
}

message opendlv.body.ComponentInfo [id = 1021] {
  opendlv.coord.Position position [id = 1];
  string description [id = 2];
}

message opendlv.body.ActuatorInfo [id = 1022] {
  opendlv.coord.Position position [id = 1];
  string description [id = 2];
  uint32 signalId [id = 3];
  double minValue [id = 4];
  double maxValue [id = 5];
}

message opendlv.body.SensorInfo [id = 1023] {
  opendlv.coord.Position position [id = 1];
  string description [id = 2];
  uint32 signalId [id = 3];
  double accuracyStd [id = 4];
}

message opendlv.body.SignalInfo [id = 1024] {
  string description [id = 1];
  uint32 signalId [id = 2];
  double accuracyStd [id = 3];
}

message opendlv.proxy.GroundSpeedReading [id = 1031] {
  double groundSpeed [id = 1];
}

message opendlv.proxy.GroundSteeringReading [id = 1032] {
  double groundSteering [id = 1];
}

message opendlv.proxy.AccelerometerReading [id = 1033] {
  double accelerationX [id = 1];
  double accelerationY [id = 2];
  double accelerationZ [id = 3];
}

message opendlv.proxy.MagnetometerReading [id = 1034] {
  double magneticFieldX [id = 1];
  double magneticFieldY [id = 2];
  double magneticFieldZ [id = 3];
}

message opendlv.proxy.GyroscopeReading [id = 1035] {
  double angularVelocityX [id = 1];
  double angularVelocityY [id = 2];
  double angularVelocityZ [id = 3];
}

message opendlv.proxy.GeodeticWgs84Reading [id = 19] {
  double latitude [id = 1];
  double longitude [id = 3];
}

message opendlv.proxy.GeodeticHeadingReading [id = 1037] {
  double northHeading [id = 1];
}

message opendlv.proxy.GroundSteeringRequest [id = 1071] {
  double groundSteering [id = 1];
}

message opendlv.proxy.GroundAccelerationRequest [id = 1072] {
  double groundAcceleration [id = 1];
}

message opendlv.proxy.GroundDecelerationRequest [id = 1073] {
  double groundDeceleration [id = 1];
}

message opendlv.proxy.GroundSpeedRequest [id = 1073] {
  double groundSpeed [id = 1];
}


message opendlv.system.SignalStatusMessage [id = 1091] {
  int32 code [id = 1];
  string description [id = 2];
}

message opendlv.system.SystemOperationState [id = 1092] {
  int32 code [id = 1];
  string description [id = 2];
}

message opendlv.system.NetworkStatusMessage [id = 1093] {
  int32 code [id = 1];
  string description [id = 2];
}

message opendlv.logic.sensation.Direction [id = 1101] {
  double azimuthAngle [id = 1];
  double zenithAngle [id = 2];
}

message opendlv.logic.sensation.Point [id = 1102] {
  double azimuthAngle [id = 1];
  double zenithAngle [id = 2];
  double distance [id = 3];
}

message opendlv.logic.sensation.Size [id = 1103] {
  double angularWidth [id = 1];
  double angularHeight [id = 2];
}

message opendlv.logic.sensation.Attention [id = 1104] {
  double azimuthAngle [id = 1];
  double zenithAngle [id = 2];
}

message opendlv.logic.sensation.Geolocation [id = 1105] {
  double latitude [id = 1];
  double longitude [id = 2];
  double altitude [id = 3];
  double heading [id = 4];
}

message opendlv.logic.perception.Object [id = 1121] {
  string type [id = 1];
  int32 objectId [id = 2];
}

message opendlv.logic.perception.ObjectBody [id = 1122] {
  opendlv.logic.sensation.Point bearing [id = 1];
  opendlv.logic.sensation.Size size [id = 2];
  int32 objectId [id = 3];
}

message opendlv.logic.perception.Surface [id = 1123] {
  string type [id = 1];
  list<opendlv.coord.Position> polygon [id = 2];
  int16 surfaceId [id = 3];
  list<int16> connectedWith [id = 4];
  list<int16> traversableTo [id = 5];
}

message opendlv.logic.action.AimDirection [id = 1161] {
  double azimuthAngle [id = 1];
  double zentihAngle [id = 2];
}

message opendlv.logic.action.AimPoint [id = 1162] {
  double azimuthAngle [id = 1];
  double zenithAngle [id = 2];
  double distance [id = 3];
}

message opendlv.logic.action.PreviewPoint [id = 1163] {
  double azimuthAngle [id = 1];
  double zenithAngle [id = 2];
  double distance [id = 3];
}

message opendlv.logic.cognition.GroundSteeringLimit [id = 1181] {
  double steeringLimit [id = 1];
}

message opendlv.logic.cognition.GroundSpeedLimit [id = 1182] {
  double speedLimit [id = 1];
}

message opendlv.proxy.WaterTemperature [id = 1038] { 
  int8 temp1 [id = 1];
  int8 temp2 [id = 2];
  int8 temp3 [id = 3];
}